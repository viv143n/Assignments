{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "057993f4",
   "metadata": {},
   "source": [
    "# Assignment 1 : Python Programming Basic"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bce5e64d",
   "metadata": {},
   "source": [
    "### 1. Write a Python program to print &quot;Hello Python&quot;?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d668743a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello World\n"
     ]
    }
   ],
   "source": [
    "def word(x:str): \n",
    "    '''This program is generalized to print any string'''\n",
    "    print(f'{str(x)}')\n",
    "\n",
    "word('Hello World')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0d286ba2",
   "metadata": {},
   "source": [
    "### 2. Write a Python program to do arithmetical operations addition and division?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "66bdb0d9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Addition :  6\n",
      "Division :  1.0\n"
     ]
    }
   ],
   "source": [
    "class arithematical_ops:\n",
    "    \n",
    "    '''This Class Contain Simple Arithmatic Functions'''\n",
    "    \n",
    "    def addition(x : int , y : int):\n",
    "    \n",
    "        '''This Function Adds two integers'''\n",
    "        \n",
    "        return x + y\n",
    "\n",
    "\n",
    "    def division(x : int , y : int , divide_by_x : bool = True):\n",
    "\n",
    "        '''This Fucntion Takes two parameters and divides each other based on boolean condition'''\n",
    "\n",
    "        if divide_by_x == False:\n",
    "            return y / x\n",
    "        else:\n",
    "            return x / y\n",
    "        \n",
    "        \n",
    "print('Addition : ',arithematical_ops.addition(3,3))\n",
    "print('Division : ',arithematical_ops.division(3,3))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce288379",
   "metadata": {},
   "source": [
    "### 3. Write a Python program to find the area of a triangle?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b1244dde",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Area of Triangle with base 2 and height 3 is 3.0'"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def area_of_triangle(base : int , height : int) -> str:\n",
    "    \n",
    "    '''This Function returns str of Area of triangle'''\n",
    "    \n",
    "    return f'Area of Triangle with base {base} and height {height} is ' + str(0.5*base*height)\n",
    "\n",
    "area_of_triangle(2,3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a82331e",
   "metadata": {},
   "source": [
    "### 4. Write a Python program to swap two variables?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9f05a258",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((2+6j), (1+7j))"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def Swapper(x : any ,y : any ) -> any:\n",
    "    \n",
    "    '''This Program Swaps Two parameters be it str,bool,float or any other dtype'''\n",
    "    \n",
    "    x,y = y,x\n",
    "    return x,y\n",
    "\n",
    "Swapper(1 + 7j ,2 + 6j)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ec7a7ba",
   "metadata": {},
   "source": [
    "### 5. Write a Python program to generate a random number?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "a3e311f2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "63"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import random\n",
    "\n",
    "def RandomNumberGen(x : int ,y : int) -> int:\n",
    "    \n",
    "    '''This Program Generates Random Number'''\n",
    "    \n",
    "    return random.randint(x,y)\n",
    "\n",
    "RandomNumberGen(1,100)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
